// // import { useState, ChangeEvent, FormEvent } from "react";
// // import { Button, Form } from 'react-bootstrap';
// // import { uploadImage, submitBasket } from "../../services/basketService";

// // interface BasketData {
// //   title: string;
// //   description: string;
// //   sum: number | "";
// //   freeAmount: number | "";
// // }

// // const AddBasket: React.FC = () => {
// //   const [basketData, setBasketData] = useState<BasketData>({
// //     title: "",
// //     description: "",
// //     sum: "",
// //     freeAmount: "",
// //   });

// //   const [image, setImage] = useState<File | null>(null);

// //   const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
// //     const { name, value } = e.target;
// //     setBasketData({
// //       ...basketData,
// //       [name]: name === "sum" || name === "freeAmount" ? Number(value) || "" : value,
// //     });
// //   };

// //   const handleImageChange = (e: ChangeEvent<HTMLInputElement>) => {
// //     if (e.target.files && e.target.files.length > 0) {
// //       setImage(e.target.files[0]);
// //     }
// //   };

// //   const handleSubmit = async (e: FormEvent) => {
// //     e.preventDefault();
// //     console.log("Basket Data:", basketData);
// //     let imageUrl = "";
// //     if (image) {
// //       imageUrl = await uploadImage(image);
// //     }
// //     console.log("Image URL:", imageUrl);

// //     await submitBasket({
// //       ...basketData,
// //       image: imageUrl,
// //       sum: typeof basketData.sum === 'number' ? basketData.sum : 0,
// //       freeAmount: typeof basketData.freeAmount === 'number' ? basketData.freeAmount : 0
// //     });
// //   };
// // return (
// //     <form onSubmit={handleSubmit} className="space-y-4 border rounded">
// //       <Form.Control type="text" name="title" placeholder="Title" value={basketData.title} onChange={handleChange} required />
// //       <Form.Control type="text" name="description" placeholder="Description" value={basketData.description} onChange={handleChange} required />
// //       <Form.Control type="number" name="sum" placeholder="Sum" value={basketData.sum} onChange={handleChange} required />
// //       <Form.Control type="number" name="freeAmount" placeholder="Free Amount" value={basketData.freeAmount} onChange={handleChange} required />
// //       <Form.Control type="file" onChange={handleImageChange} accept="image/*" />
// //       <Button type="submit">Submit</Button>
// //     </form>
// //   );
// // };

// // export default AddBasket;
// import { useState, ChangeEvent, FormEvent } from "react";
// import { Button, Form } from 'react-bootstrap';
// import { submitBasket } from "../../services/basketService";
// import { DonationOption } from "../../models/DonationOption";

// // interface BasketData {
// //   title: string;
// //   description: string;
// //   sum: number | "";
// //   freeAmount: number | "";
// // }

// const AddBasket: React.FC = () => {
//   const [basketData, setBasketData] = useState<DonationOption>({
//     title: "",
//     amount: "",
//     sum: 0,
//     description: "",
//     image: "",
//     freeAmount: false

//   });

//   const [image, setImage] = useState<File | null>(null);

//   // const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
//   //   const { name, value } = e.target;
//   //   setBasketData({
//   //     ...basketData,
//   //     [name]: name === "sum" || name === "freeAmount" ? Number(value) || "" : value,
//   //   });
//   // };
//   const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
//     const { name, value, type, checked } = e.target;

//     // ניהול שדות בוליאניים
//     if (type === "checkbox") {
//       setBasketData({
//         ...basketData,
//         [name]: checked // עבור checkbox, value יהיה בוליאני
//       });
//     } else {
//       setBasketData({
//         ...basketData,
//         [name]: name === "sum" || name === "freeAmount" ? Number(value) || "" : value,
//       });
//     }
//   };

//   const handleImageChange = (e: ChangeEvent<HTMLInputElement>) => {
//     if (e.target.files && e.target.files.length > 0) {
//       setImage(e.target.files[0]);
//     }
//   };

//   const handleSubmit = async (e: FormEvent) => {
//     e.preventDefault();
//     console.log("Basket Data:", basketData);

//     // יצירת אובייקט FormData
//     const formData = new FormData();

//     // הוספת פרטי הסל ל-FormData
//     formData.append("title", basketData.title);
//     formData.append("description", basketData.description);
//     formData.append("sum", String(basketData.sum));
//     // formData.append("freeAmount",(basketData.freeAmount));
//     // formData.append("freeAmount", String(basketData.freeAmount)); // המרת ערך הבוליאני למחרוזת
//     formData.append("freeAmount", basketData.freeAmount ? '1' : '0'); // המרת ערך בוליאני למספר


//     // אם יש תמונה, נוסיף אותה ל-FormData
//     if (image) {
//       formData.append("image", image);
//     }

//     // שליחה לשרת
//     await submitBasket(formData);
//   };

//   return (
//     <form onSubmit={handleSubmit} className="space-y-4 border rounded">
//       <Form.Control type="text" name="title" placeholder="Title" value={basketData.title} onChange={handleChange} required />
//       <Form.Control type="text" name="description" placeholder="Description" value={basketData.description} onChange={handleChange} required />
//       <Form.Control type="number" name="sum" placeholder="Sum" value={basketData.sum} onChange={handleChange} required />
//       <Form.Check
//         type="checkbox"
//         label="Free Amount"
//         name="freeAmount"
//         checked={basketData.freeAmount} // הערך יהיה true/false
//         onChange={handleChange}
//       />
//       <Form.Control type="file" onChange={handleImageChange} accept="image/*" />
//       <Button type="submit">Submit</Button>
//     </form>
//   );
// };



// export const uploadImage = async (file: File): Promise<string> => {
//     const formData = new FormData();
//     formData.append("image", file);

//     const response = await fetch("http://localhost:5000/basekt/upload", {
//         method: "POST",
//         body: formData,
//     });

//     if (!response.ok) {
//         throw new Error("Failed to upload image");
//     }

//     const data: { imageUrl: string } = await response.json();
//     return data.imageUrl;
// };


// export const submitBasket = async (basket: BasketData): Promise<any> => {
//     console.log("Sending basket:", basket);

//     const response = await fetch("http://localhost:5000/api/add", {
//         method: "POST",
//         headers: {
//             "Content-Type": "application/json"},
//             body: JSON.stringify(basket),
//     });

//     if(!response.ok) {
//         throw new Error("Failed to submit basket");
//     }
//     return response.json();
// }; 
// מחיקת סל


// import React, { FC } from 'react';
// import './deleteCart.scss';

// interface deleteCartProps {}

// const deleteCart: FC<deleteCartProps> = () => (
//   <div className="deleteCart">
//     deleteCart Component
//   </div>
// );

// export default deleteCart;
// import React, { useState, useEffect, useRef } from "react";
// import "./DeleteCart.scss";
// import { Card } from "primereact/card";
// import { Button } from "primereact/button";
// import { Toast } from "primereact/toast";
// import NavBar from "../NavBar/NavBar";
// import { getDonationOptions, deleteBasket } from "../../services/basketService";
// import { DonationOption } from "../../models/DonationOption";


// const DeleteCart = () => {
//   // const [donationOptions, setDonationOptions] = useState([]);
//   const [donationOptions, setDonationOptions] = useState<DonationOption[]>([]);

//   const toast = useRef(null);

//   useEffect(() => {
//     const fetchDonationOptions = async () => {
//       try {
//         const options = await getDonationOptions();
//         setDonationOptions(options.basket || []);
//       } catch (error) {
//         console.error("Error fetching donation options:", error);
//       }
//     };

//     fetchDonationOptions();
//   }, []);

//   const handleDelete = async (id:number) => {
//     try {
//       await deleteBasket(id);
//       setDonationOptions((prev) => prev.filter((item) => item.id !== id));
//       // toast.current?.show({
//       //   severity: "success",
//       //   summary: "נמחק בהצלחה",
//       //   detail: "הסל נמחק מהרשימה",
//       //   life: 3000,
//       // });
//     } catch (error) {
//       console.error("Error deleting basket:", error);
//       // toast.current?.show({
//       //   severity: "error",
//       //   summary: "שגיאה",
//       //   detail: "לא ניתן למחוק את הסל",
//       //   life: 3000,
//       // });
//     }
//   };

//   return (
//     <div className="DeleteCart">
//       <NavBar />
//       <div className="donation-page">
//         <h1 className="title">ניהול סלי צדקה</h1>
//         <Toast ref={toast} position="top-right" />
//         <div className="donation-grid">
//           {donationOptions.map((option) => (
//             <Card
//               key={option.id}
//               title={option.title}
//               subTitle={`${option.sum} ₪`}
//               header={<img alt={option.title} src={`http://localhost:5000${option.image}`} className="donation-image" />}
//               className="donation-card"
//             >
//               <p className="donation-description">{option.description}</p>
//               <Button
//                 icon="pi pi-trash"
//                 className="p-button-danger"
//                 onClick={() => handleDelete(option.id)}
//                 label="מחיקה"
//               />
//             </Card>
//           ))}
//         </div>
//       </div>
//     </div>
//   );
// };

// export default DeleteCart;






//donationCrt:

// import React, { useState } from 'react';
// import { useDispatch, useSelector } from 'react-redux';
// import { RootState } from '../../redux/store';
// import { Button } from 'primereact/button';
// import { Dialog } from 'primereact/dialog';
// import { Card } from 'primereact/card';
// import { clearCart, removeFromCart } from '../../redux/cartSlice';
// import './DonationCart.scss';

// interface DonationCartProps {
//   setCartVisible: (visible: boolean) => void;
// }

// const DonationCart: React.FC<DonationCartProps> = ({ setCartVisible }) => {
//   const dispatch = useDispatch();
//   const cart = useSelector((state: RootState) => state.cart.cartItems);

//   const handleClearCart = () => {
//     dispatch(clearCart());
//   };

//   const handleCheckout = () => {
//     alert("מעבר לעמוד תשלום...");
//     setCartVisible(false); // סגירת העגלה
//   };

//   const handleRemoveItem = (index: number) => {
//     dispatch(removeFromCart(index));
//   };

//   const totalAmount = cart.reduce((acc, item) => acc + item.sum, 0);

//   return (
//     <Dialog
//       header="העגלה שלי"
//       visible={true}
//       onHide={() => setCartVisible(false)} // סגירת העגלה
//       className="cart-dialog"
//       style={{ position: 'absolute', top: '100px', right: '10px' }} // מיקום מתחת לאייקון
//     >
//       {cart.length === 0 ? (
//         <p>העגלה ריקה. הוסף תרומות כדי לראות אותן כאן.</p>
//       ) : (
//         <>
//           <div className="cart-items">
//             {cart.map((item, index) => (
//               <Card key={index} className="cart-item-card">
//                 <div className="cart-item-content">
//                   <strong>{item.title}</strong>
//                   {/* <p>כמות: {item.amount} ₪</p> */}
//                   <p>סכום כולל: {item.sum} ₪</p>
//                   <Button 
//                     label="מחיקה" 
//                     icon="pi pi-trash" 
//                     onClick={() => handleRemoveItem(index)} 
//                     className="delete-item-button"
//                   />
//                 </div>
//               </Card>
//             ))}
//           </div>
//           <h3>סה"כ: {totalAmount} ₪</h3>
//           <div className="cart-actions">
//             <Button label="נקה סל" onClick={handleClearCart} className="clear-cart-button" />
//             <Button label="לתשלום" onClick={handleCheckout} className="checkout-button" />
//           </div>
//         </>
//       )}
//     </Dialog>
//   );
// };

// export default DonationCart;






// import React, { useState, useEffect, useRef } from "react";
// import { InputText } from "primereact/inputtext";
// import { Button } from "primereact/button";
// import { InputMask } from "primereact/inputmask";
// import { Message } from "primereact/message";
// import { useNavigate } from 'react-router-dom';

// import axios from "axios";

// interface PersonalDetailsFormProps {
//   amount: number;
// }

// const PersonalDetailsForm: React.FC<PersonalDetailsFormProps> = ({ amount }) => {
//   const [firstName, setFirstName] = useState("");
//   const [lastName, setLastName] = useState("");
//   const [phone, setPhone] = useState("");
//   const [email, setEmail] = useState("");
//   const [address, setAddress] = useState("");
//   const [paymentType, setPaymentType] = useState<"Ragil" | "HK">("Ragil");
//   const [months, setMonths] = useState<string>("");
//   const [message, setMessage] = useState<{ severity: "success" | "error"; text: string } | null>(null);
//   const iframeRef = useRef<any>();
//   const navigate = useNavigate();
//   const [showComponent, setShowComponent] = useState(true);


//   useEffect(() => {
//     const messageListener = (event: MessageEvent) => {
//       if (event.origin.includes("matara.pro")) {
//         console.log("Message from iframe:", event.data);
//         if (event.data?.Name === "Heightss") {
//           iframeRef.current.style.height = `${parseInt(event.data.Value) + 15}px`;
//         }
//         if (event.data.Value?.Status === 'OK') {
//           window.location.href = "/thenks";
//           // setMessage({ severity: "success", text: "התשלום עבר בהצלחה! תודה על תרומתך." });
//           // navigate('/thenks')
//         }
//         else if (event.data.Value?.Status === "Error")
//           {
//           // window.location.href = "/thenks";
//           setMessage({ severity: "error", text: "שגיאה בביצוע התשלום. נסה שוב מאוחר יותר." });
//           console.log("שגיאה בביצוע התשלום. נסה שוב מאוחר יותר.")
//           setTimeout(() => {
//             setShowComponent(false);
//             navigate("/thenks");
//           }, 1000);
//           // window.location.href = "/thenks";
//         }

//         setTimeout(() => setMessage(null), 5000); // מעלים את ההודעה אחרי 5 שניות
//       }
//     };

//     window.addEventListener("message", messageListener);
//     return () => window.removeEventListener("message", messageListener);
//   }, []);

//   const handleSubmit = async () => {
//     try {
//       const response = await axios.post("http://localhost:5000/donor/save-donor", {
//         firstName,
//         lastName,
//         phone,
//         email,
//         address,
//       });
//       console.log("Donor saved:", response.data);
//     } catch (error) {
//       console.error("Error saving donor:", error);
//     }
//   };

//   const handlePayment = () => {
//     handleSubmit();
//     const iframe = document.getElementById("NedarimFrame") as HTMLIFrameElement;
//     if (iframe && iframe.contentWindow) {
//       iframe.contentWindow.postMessage(
//         {
//           Name: "FinishTransaction2",
//           Value: {
//             Mosad: "7013230",
//             ApiValid: "A1iMKiIXRo",
//             Zeout: "",
//             PaymentType: paymentType,
//             Currency: "1",
//             FirstName: firstName,
//             LastName: lastName,
//             Street: address,
//             City: "",
//             Phone: phone,
//             Mail: email,
//             Amount: amount,
//             Tashlumim: paymentType === "HK" && months ? months : "1",
//             Comment: "תרומה דרך האתר",
//             Groupe: "",
//             Param1: "",
//             Param2: "",
//             CallBack: "https://scrolls-website.onrender.com/paymentApi/payment-callback",
//             CallBackMailError: "scrollsSite@gmail.com",
//           },
//         },
//         "*"
//       );
//     } else {
//       console.error("Iframe not found or contentWindow is unavailable.");
//     }
//   };
//   if (!showComponent) return null;
//   return (
//     <div style={{ maxWidth: "600px", margin: "auto", padding: "40px", borderRadius: "15px", boxShadow: "0 0 20px rgba(0,0,0,0.1)", backgroundColor: "#f9f9f9" }}>
//       <h2 style={{ textAlign: "center", color: "#2c3e50", marginBottom: "30px", fontFamily: "Arial, sans-serif", fontWeight: "bold" }}>
//         מלא את פרטיך האישיים
//       </h2>

//       {message && (
//         <Message severity={message.severity} text={message.text} style={{ marginBottom: "20px" }} />
//       )}

//       <div className="p-fluid" style={{ marginBottom: "20px" }}>
//         <label style={{ fontSize: "16px", color: "#34495e" }}>שם פרטי:</label>
//         <InputText value={firstName} onChange={(e) => setFirstName(e.target.value)} style={{ width: "100%", padding: "10px", borderRadius: "5px", borderColor: "#ddd" }} />
//       </div>

//       <div className="p-fluid" style={{ marginBottom: "20px" }}>
//         <label style={{ fontSize: "16px", color: "#34495e" }}>שם משפחה:</label>
//         <InputText value={lastName} onChange={(e) => setLastName(e.target.value)} style={{ width: "100%", padding: "10px", borderRadius: "5px", borderColor: "#ddd" }} />
//       </div>

//       <div className="p-fluid" style={{ marginBottom: "20px" }}>
//         <label style={{ fontSize: "16px", color: "#34495e" }}>טלפון:</label>
//         <InputMask mask="999999999" value={phone} onChange={(e) => setPhone(e.value || "")} style={{ width: "100%", padding: "10px", borderRadius: "5px", borderColor: "#ddd" }} />
//       </div>

//       <h3 style={{ textAlign: "center", color: "#2980b9", fontSize: "20px" }}>סכום לתשלום: {amount} ₪</h3>

//       <div style={{ display: "flex", justifyContent: "center", marginBottom: "20px" }}>
//         <Button
//           label="תשלום חד-פעמי"
//           onClick={() => setPaymentType("Ragil")}
//           className={paymentType === "Ragil" ? "p-button-primary" : "p-button-outlined"}
//           style={{ marginRight: "10px" }}
//         />
//         <Button
//           label="הוראת קבע"
//           onClick={() => setPaymentType("HK")}
//           className={paymentType === "HK" ? "p-button-primary" : "p-button-outlined"}
//         />
//       </div>

//       {paymentType === "HK" && (
//         <div className="p-fluid" style={{ marginBottom: "20px" }}>
//           <label style={{ fontSize: "16px", color: "#34495e" }}>מספר חודשים:</label>
//           <InputText
//             value={months}
//             onChange={(e) => setMonths(e.target.value)}
//             style={{ width: "100%", padding: "10px", borderRadius: "5px", borderColor: "#ddd" }}
//             type="number"
//             min="1"
//             placeholder="הכנס מספר חודשים"
//           />
//         </div>
//       )}

//       <iframe
//         id="NedarimFrame"
//         style={{
//           width: "100%",
//           height: "450px",
//           border: "none",
//           borderRadius: "10px",
//           boxShadow: "0 0 15px rgba(0, 0, 0, 0.1)",
//           marginTop: "20px",
//         }}
//         src="https://matara.pro/nedarimplus/iframe?language=he"
//       ></iframe>

//       <div style={{ display: "flex", justifyContent: "center", marginTop: "30px" }}>
//         <Button label="אישור תשלום" onClick={handlePayment} className="p-button-success" style={{ padding: "10px 20px", fontSize: "16px", borderRadius: "5px" }} />
//       </div>
//     </div>
//   );
// };

// export default PersonalDetailsForm;